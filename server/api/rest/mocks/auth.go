// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"sync"
)

// AuthMock is a mock implementation of rest.Auth.
//
//	func TestSomethingThatUsesAuth(t *testing.T) {
//
//		// make and configure a mocked rest.Auth
//		mockedAuth := &AuthMock{
//			GetSecretKeyByIDFunc: func(keyID string) (string, bool) {
//				panic("mock out the GetSecretKeyByID method")
//			},
//		}
//
//		// use mockedAuth in code that requires rest.Auth
//		// and then make assertions.
//
//	}
type AuthMock struct {
	// GetSecretKeyByIDFunc mocks the GetSecretKeyByID method.
	GetSecretKeyByIDFunc func(keyID string) (string, bool)

	// calls tracks calls to the methods.
	calls struct {
		// GetSecretKeyByID holds details about calls to the GetSecretKeyByID method.
		GetSecretKeyByID []struct {
			// KeyID is the keyID argument value.
			KeyID string
		}
	}
	lockGetSecretKeyByID sync.RWMutex
}

// GetSecretKeyByID calls GetSecretKeyByIDFunc.
func (mock *AuthMock) GetSecretKeyByID(keyID string) (string, bool) {
	if mock.GetSecretKeyByIDFunc == nil {
		panic("AuthMock.GetSecretKeyByIDFunc: method is nil but Auth.GetSecretKeyByID was just called")
	}
	callInfo := struct {
		KeyID string
	}{
		KeyID: keyID,
	}
	mock.lockGetSecretKeyByID.Lock()
	mock.calls.GetSecretKeyByID = append(mock.calls.GetSecretKeyByID, callInfo)
	mock.lockGetSecretKeyByID.Unlock()
	return mock.GetSecretKeyByIDFunc(keyID)
}

// GetSecretKeyByIDCalls gets all the calls that were made to GetSecretKeyByID.
// Check the length with:
//
//	len(mockedAuth.GetSecretKeyByIDCalls())
func (mock *AuthMock) GetSecretKeyByIDCalls() []struct {
	KeyID string
} {
	var calls []struct {
		KeyID string
	}
	mock.lockGetSecretKeyByID.RLock()
	calls = mock.calls.GetSecretKeyByID
	mock.lockGetSecretKeyByID.RUnlock()
	return calls
}
